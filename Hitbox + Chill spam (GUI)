-- Start of Fast Weapons script (Baddies)

local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")

local player = Players.LocalPlayer

-- CONFIGURATION
local REQUIRE_EQUIPMENT = true
local SpamAllRequireEquip = false
local spamDelay = 0

local toolConfigs = {
    ["Pan"] = { Enabled = true, RemotePath = {"Modules", "Net", "RE/panHit"}, Args = {1} },
    ["1 punches"] = { Enabled = true, RemotePath = {"PUNCHEVENT"}, Args = {1} },
    ["PinkStopSignal"] = { Enabled = true, RemotePath = {"Modules", "Net", "RE/pinkStopSignalHit"}, Args = {1} },
    ["BeachShovel"] = { Enabled = true, RemotePath = {"Modules", "Net", "RE/BeachShovelHit"}, Args = {1} },
    ["Spray"] = { Enabled = true, RemotePath = {"Modules", "Net", "RE/sprayRemote"}, Args = {} },
    ["stopsignal"] = { Enabled = true, RemotePath = {"Modules", "Net", "RE/stopsignalHit"}, Args = {1} },
    ["toilet"] = { Enabled = true, RemotePath = {"Modules", "Net", "RE/ToiletWeaponActivated"}, Args = {1} },
    ["RustyPipe"] = { Enabled = true, RemotePath = {"Modules", "Net", "RE/PipeActivated"}, Args = {1} },
    ["trashbag"] = { Enabled = true, RemotePath = {"Modules", "Net", "RE/TrashbagHit"}, Args = {1} },
    ["Mop"] = { Enabled = true, RemotePath = {"Modules", "Net", "RE/mopHit"}, Args = {1} }
}

local autoSpamEnabled = false
local lastFireTime = 0

-- GUI Setup
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "ToolSpamGUI"
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame")
mainFrame.Parent = screenGui
mainFrame.Size = UDim2.new(0, 240, 0, 150 + (#toolConfigs * 30) + 40) -- extra space for Rejoin button
mainFrame.Position = UDim2.new(0, 10, 0.5, -mainFrame.Size.Y.Offset / 2)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Selectable = true

local originalSize = mainFrame.Size
local originalPosition = mainFrame.Position

local title = Instance.new("TextLabel", mainFrame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Text = "Tool Spam Control"
title.TextColor3 = Color3.new(1, 1, 1)
title.BackgroundTransparency = 1
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18

local hideButton = Instance.new("TextButton", mainFrame)
hideButton.Size = UDim2.new(0, 40, 0, 20)
hideButton.Position = UDim2.new(1, -45, 0, 5)
hideButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
hideButton.TextColor3 = Color3.new(1, 1, 1)
hideButton.Font = Enum.Font.SourceSansBold
hideButton.TextSize = 16
hideButton.Text = "-"

local contentFrame = Instance.new("Frame", mainFrame)
contentFrame.BackgroundTransparency = 1
contentFrame.Position = UDim2.new(0, 0, 0, 30)
contentFrame.Size = UDim2.new(1, 0, 1, -30)
contentFrame.Name = "ContentFrame"

local masterToggle = Instance.new("TextButton", contentFrame)
masterToggle.Size = UDim2.new(1, -20, 0, 30)
masterToggle.Position = UDim2.new(0, 10, 0, 0)
masterToggle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
masterToggle.TextColor3 = Color3.new(1, 1, 1)
masterToggle.Font = Enum.Font.SourceSans
masterToggle.TextSize = 18
masterToggle.Text = "Start Spamming: OFF"

local yOffset = 40
for toolName, config in pairs(toolConfigs) do
    local toggle = Instance.new("TextButton", contentFrame)
    toggle.Size = UDim2.new(1, -20, 0, 25)
    toggle.Position = UDim2.new(0, 10, 0, yOffset)
    toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    toggle.TextColor3 = Color3.new(1, 1, 1)
    toggle.Font = Enum.Font.SourceSans
    toggle.TextSize = 16
    toggle.Text = toolName .. ": " .. (config.Enabled and "ON" or "OFF")

    toggle.MouseButton1Click:Connect(function()
        config.Enabled = not config.Enabled
        toggle.Text = toolName .. ": " .. (config.Enabled and "ON" or "OFF")
    end)

    yOffset += 30
end

local delayLabel = Instance.new("TextLabel", contentFrame)
delayLabel.Size = UDim2.new(0, 140, 0, 25)
delayLabel.Position = UDim2.new(0, 10, 0, yOffset)
delayLabel.BackgroundTransparency = 1
delayLabel.TextColor3 = Color3.new(1, 1, 1)
delayLabel.Font = Enum.Font.SourceSans
delayLabel.TextSize = 16
delayLabel.Text = "Spam Delay (sec):"

local delayInput = Instance.new("TextBox", contentFrame)
delayInput.Size = UDim2.new(0, 60, 0, 25)
delayInput.Position = UDim2.new(0, 160, 0, yOffset)
delayInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
delayInput.TextColor3 = Color3.new(1, 1, 1)
delayInput.Font = Enum.Font.SourceSans
delayInput.TextSize = 16
delayInput.ClearTextOnFocus = false
delayInput.Text = tostring(spamDelay)

delayInput.FocusLost:Connect(function()
    local val = tonumber(delayInput.Text)
    if val and val >= 0 then
        spamDelay = val
        delayInput.Text = tostring(spamDelay)
    else
        delayInput.Text = tostring(spamDelay)
    end
end)

yOffset += 30

-- Require Equip toggle
local requireToggle = Instance.new("TextButton", contentFrame)
requireToggle.Size = UDim2.new(1, -20, 0, 25)
requireToggle.Position = UDim2.new(0, 10, 0, yOffset)
requireToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
requireToggle.TextColor3 = Color3.new(1, 1, 1)
requireToggle.Font = Enum.Font.SourceSans
requireToggle.TextSize = 16
requireToggle.Text = "Require Equip (Single Tool): " .. (REQUIRE_EQUIPMENT and "ON" or "OFF")

requireToggle.MouseButton1Click:Connect(function()
    REQUIRE_EQUIPMENT = not REQUIRE_EQUIPMENT
    requireToggle.Text = "Require Equip (Single Tool): " .. (REQUIRE_EQUIPMENT and "ON" or "OFF")
end)

yOffset += 35

-- WalkSpeed controls
local walkSpeedLabel = Instance.new("TextLabel", contentFrame)
walkSpeedLabel.Size = UDim2.new(0, 120, 0, 25)
walkSpeedLabel.Position = UDim2.new(0, 10, 0, yOffset)
walkSpeedLabel.BackgroundTransparency = 1
walkSpeedLabel.TextColor3 = Color3.new(1, 1, 1)
walkSpeedLabel.Font = Enum.Font.SourceSans
walkSpeedLabel.TextSize = 16
walkSpeedLabel.Text = "WalkSpeed:"

local walkSpeedInput = Instance.new("TextBox", contentFrame)
walkSpeedInput.Size = UDim2.new(0, 60, 0, 25)
walkSpeedInput.Position = UDim2.new(0, 130, 0, yOffset)
walkSpeedInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
walkSpeedInput.TextColor3 = Color3.new(1, 1, 1)
walkSpeedInput.Font = Enum.Font.SourceSans
walkSpeedInput.TextSize = 16
walkSpeedInput.ClearTextOnFocus = false
walkSpeedInput.Text = "13"

local walkSpeedToggle = Instance.new("TextButton", contentFrame)
walkSpeedToggle.Size = UDim2.new(0, 40, 0, 25)
walkSpeedToggle.Position = UDim2.new(0, 200, 0, yOffset)
walkSpeedToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
walkSpeedToggle.TextColor3 = Color3.new(1, 1, 1)
walkSpeedToggle.Font = Enum.Font.SourceSans
walkSpeedToggle.TextSize = 16
walkSpeedToggle.Text = "OFF"

local walkSpeedEnabled = false
local desiredSpeed = 13
local walkSpeedConn

walkSpeedInput.FocusLost:Connect(function()
    local val = tonumber(walkSpeedInput.Text)
    if val and val > 0 then
        desiredSpeed = val
    else
        walkSpeedInput.Text = tostring(desiredSpeed)
    end
end)

local function startWalkSpeedControl()
    if walkSpeedConn then walkSpeedConn:Disconnect() end
    local char = player.Character
    if not char then return end
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = desiredSpeed
        walkSpeedConn = humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
            if walkSpeedEnabled and humanoid.WalkSpeed ~= desiredSpeed then
                humanoid.WalkSpeed = desiredSpeed
            end
        end)
    end
end

player.CharacterAdded:Connect(function()
    if walkSpeedEnabled then
        task.wait(1)
        startWalkSpeedControl()
    end
end)

walkSpeedToggle.MouseButton1Click:Connect(function()
    walkSpeedEnabled = not walkSpeedEnabled
    walkSpeedToggle.Text = walkSpeedEnabled and "ON" or "OFF"
    if walkSpeedEnabled then
        startWalkSpeedControl()
    elseif walkSpeedConn then
        walkSpeedConn:Disconnect()
    end
end)

yOffset += 35

-- Spam All checkbox
local spamAllLabel = Instance.new("TextLabel", contentFrame)
spamAllLabel.Size = UDim2.new(0, 180, 0, 25)
spamAllLabel.Position = UDim2.new(0, 10, 0, yOffset)
spamAllLabel.BackgroundTransparency = 1
spamAllLabel.TextColor3 = Color3.new(1, 1, 1)
spamAllLabel.Font = Enum.Font.SourceSans
spamAllLabel.TextSize = 16
spamAllLabel.Text = "Spam All requires tool equipped"

local checkbox = Instance.new("Frame", contentFrame)
checkbox.Size = UDim2.new(0, 25, 0, 25)
checkbox.Position = UDim2.new(0, 200, 0, yOffset)
checkbox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
checkbox.BorderSizePixel = 1
checkbox.BorderColor3 = Color3.new(1,1,1)
checkbox.Active = true

local checkFill = Instance.new("Frame", checkbox)
checkFill.Size = UDim2.new(0, 17, 0, 17)
checkFill.Position = UDim2.new(0, 4, 0, 4)
checkFill.BackgroundColor3 = SpamAllRequireEquip and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(30,30,30)
checkFill.BorderSizePixel = 0

checkbox.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        SpamAllRequireEquip = not SpamAllRequireEquip
        checkFill.BackgroundColor3 = SpamAllRequireEquip and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(30,30,30)
    end
end)

yOffset += 40

-- Rejoin Button
local rejoinButton = Instance.new("TextButton", contentFrame)
rejoinButton.Size = UDim2.new(1, -20, 0, 30)
rejoinButton.Position = UDim2.new(0, 10, 0, yOffset)
rejoinButton.BackgroundColor3 = Color3.fromRGB(80, 20, 20)
rejoinButton.TextColor3 = Color3.new(1, 1, 1)
rejoinButton.Font = Enum.Font.SourceSansBold
rejoinButton.TextSize = 18
rejoinButton.Text = "Rejoin Game"

rejoinButton.MouseButton1Click:Connect(function()
    TeleportService:Teleport(game.PlaceId, player)
end)

-- Working Minimize Button
local isMinimized = false
hideButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized

    if isMinimized then
        -- Save the position before minimizing
        originalPosition = mainFrame.Position

        contentFrame.Visible = false
        title.Visible = false
        mainFrame.Size = UDim2.new(0, 30, 0, 30)
        mainFrame.Position = UDim2.new(0, 10, 1, -40)
        hideButton.Size = UDim2.new(1, 0, 1, 0)
        hideButton.Position = UDim2.new(0, 0, 0, 0)
        hideButton.Text = "+"
        hideButton.BackgroundTransparency = 0.5
        hideButton.TextTransparency = 0.3
    else
        mainFrame.Size = originalSize
        mainFrame.Position = originalPosition -- Restore last known position
        contentFrame.Visible = true
        title.Visible = true
        hideButton.Size = UDim2.new(0, 40, 0, 20)
        hideButton.Position = UDim2.new(1, -45, 0, 5)
        hideButton.Text = "-"
        hideButton.BackgroundTransparency = 0
        hideButton.TextTransparency = 0
    end
end)

-- Remote call logic
local function getRemoteEvent(path)
    local ref = ReplicatedStorage
    for _, part in ipairs(path) do
        ref = ref:WaitForChild(part)
    end
    return ref
end

RunService.Heartbeat:Connect(function()
    if not autoSpamEnabled then return end
    local now = tick()
    if now - lastFireTime < spamDelay then return end
    lastFireTime = now

    local char = player.Character
    if not char then return end

    local equippedTool
    for _, tool in ipairs(char:GetChildren()) do
        if tool:IsA("Tool") and toolConfigs[tool.Name] and toolConfigs[tool.Name].Enabled then
            equippedTool = tool
            break
        end
    end

    if REQUIRE_EQUIPMENT then
        if equippedTool then
            local cfg = toolConfigs[equippedTool.Name]
            if cfg then
                getRemoteEvent(cfg.RemotePath):FireServer(unpack(cfg.Args))
            end
        end
    elseif SpamAllRequireEquip then
        if equippedTool then
            for name, cfg in pairs(toolConfigs) do
                if cfg.Enabled then
                    getRemoteEvent(cfg.RemotePath):FireServer(unpack(cfg.Args))
                end
            end
        end
    else
        for name, cfg in pairs(toolConfigs) do
            if cfg.Enabled then
                getRemoteEvent(cfg.RemotePath):FireServer(unpack(cfg.Args))
            end
        end
    end
end)

masterToggle.MouseButton1Click:Connect(function()
    autoSpamEnabled = not autoSpamEnabled
    masterToggle.Text = "Start Spamming: " .. (autoSpamEnabled and "ON" or "OFF")
end)

-- F7 keybind for rejoining
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.F7 then
        TeleportService:Teleport(game.PlaceId, player)
    end
end)

-- End of Fast Weapons script

-- Start of Hitbox script

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local localPlayer = Players.LocalPlayer or Players.PlayerAdded:Wait()

local HITBOX_SIZE = 7.3
local HITBOX_TRANSPARENCY = 1
local HITBOX_COLLISION = false

-- Restore original size and transparency of a character's HumanoidRootPart
local function restoreOriginalValues(character)
    if character then
        local root = character:FindFirstChild("HumanoidRootPart")
        if root then
            local originalSize = root:FindFirstChild("OriginalSize")
            local originalTransparency = root:FindFirstChild("OriginalTransparency")
            if originalSize then
                root.Size = originalSize.Value
                originalSize:Destroy()
            end
            if originalTransparency then
                root.Transparency = originalTransparency.Value
                originalTransparency:Destroy()
            end
        end
    end
end

-- Update hitboxes for all other players
local function updateHitboxes()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer then
            local character = player.Character
            if character then
                local root = character:FindFirstChild("HumanoidRootPart")
                if root then
                    if not root:FindFirstChild("OriginalSize") then
                        local originalSize = Instance.new("Vector3Value")
                        originalSize.Name = "OriginalSize"
                        originalSize.Value = root.Size
                        originalSize.Parent = root
                        
                        local originalTransparency = Instance.new("NumberValue")
                        originalTransparency.Name = "OriginalTransparency"
                        originalTransparency.Value = root.Transparency
                        originalTransparency.Parent = root
                    end
                    root.Size = Vector3.new(HITBOX_SIZE, HITBOX_SIZE, HITBOX_SIZE)
                    root.Transparency = HITBOX_TRANSPARENCY
                    root.CanCollide = HITBOX_COLLISION
                end
            end
        end
    end
end

-- Connect updateHitboxes to RunService
local connection = RunService.RenderStepped:Connect(updateHitboxes)

-- Restore on player leave
Players.PlayerRemoving:Connect(function(player)
    restoreOriginalValues(player.Character)
end)

-- Restore on script end (optional)
game:BindToClose(function()
    for _, player in pairs(Players:GetPlayers()) do
        restoreOriginalValues(player.Character)
    end
    if connection then
        connection:Disconnect()
    end
end)

-- End of Hitbox script
