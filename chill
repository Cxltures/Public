-- Modern JobId & Server Tool GUI with Server Hop, fixed size & minimized toggle

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local CoreGui = game:GetService("CoreGui")

local LocalPlayer = Players.LocalPlayer
local PLACE_ID = game.PlaceId
local CURRENT_JOBID = game.JobId

-- Check executor capability for server hop (detect if game:HttpGet is available and not blocked)
local canServerHop = pcall(function()
    return game:HttpGet("https://www.google.com")
end)

-- Create GUI
local gui = Instance.new("ScreenGui", CoreGui)
gui.Name = "ModernJobIdTool"
gui.ResetOnSpawn = false

local main = Instance.new("Frame", gui)
main.Size = UDim2.new(0, 320, 0, 280) -- smaller size
main.Position = UDim2.new(0.5, -160, 0.5, -140) -- center
main.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
main.BorderSizePixel = 0
main.Active = true
main.Draggable = true
main.ClipsDescendants = true -- clip overflow

-- Round corners
local corner = Instance.new("UICorner", main)
corner.CornerRadius = UDim.new(0, 12)
Instance.new("UIStroke", main).ApplyStrokeMode = Enum.ApplyStrokeMode.Border

-- Title
local title = Instance.new("TextLabel", main)
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundColor3 = Color3.fromRGB(45, 45, 50)
title.Text = "üåê Server Tool"
title.Font = Enum.Font.GothamBold
title.TextColor3 = Color3.new(1, 1, 1)
title.TextSize = 22

local titleCorner = Instance.new("UICorner", title)
titleCorner.CornerRadius = UDim.new(0, 12)

-- Executor level warning label (hidden if canServerHop)
local executorWarning = Instance.new("TextLabel", main)
executorWarning.Size = UDim2.new(1, -30, 0, 30)
executorWarning.Position = UDim2.new(0, 15, 0, 90)
executorWarning.BackgroundColor3 = Color3.fromRGB(180, 40, 40)
executorWarning.TextColor3 = Color3.new(1, 1, 1)
executorWarning.Font = Enum.Font.GothamBold
executorWarning.TextSize = 16
executorWarning.TextWrapped = true
executorWarning.Text = "‚ö†Ô∏è Your executor may be too limited to use Server Hop!"
executorWarning.Visible = not canServerHop
executorWarning.TextXAlignment = Enum.TextXAlignment.Center
executorWarning.TextYAlignment = Enum.TextYAlignment.Center
executorWarning.ClipsDescendants = true
Instance.new("UICorner", executorWarning)

-- JobId Display
local jobBox = Instance.new("TextBox", main)
jobBox.Size = UDim2.new(1, -30, 0, 40)
jobBox.Position = UDim2.new(0, 15, 0, 50)
jobBox.Text = CURRENT_JOBID
jobBox.TextColor3 = Color3.new(1, 1, 1)
jobBox.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
jobBox.Font = Enum.Font.Code
jobBox.TextSize = 16
jobBox.ClearTextOnFocus = false
Instance.new("UICorner", jobBox)

-- Button Utility
local buttonCount = 0
local nextY = 130 -- pushed down a bit to make room for warning

local function makeButton(text, color, callback)
	buttonCount += 1

	local btn = Instance.new("TextButton", main)
	btn.Size = UDim2.new(0.5, -20, 0, 36)

	-- Left or right column positioning
	local column = (buttonCount % 2 == 1) and 0 or 1
	local xPos = (column == 0) and 15 or 165 -- adjusted for smaller width

	-- Calculate vertical position by row number
	local row = math.floor((buttonCount - 1) / 2)
	local yPos = nextY + row * 40

	btn.Position = UDim2.new(0, xPos, 0, yPos)
	btn.Text = text
	btn.Font = Enum.Font.Gotham
	btn.TextColor3 = Color3.new(1,1,1)
	btn.TextSize = 16
	btn.BackgroundColor3 = color
	Instance.new("UICorner", btn)
	btn.MouseButton1Click:Connect(callback)

	return btn
end

-- Notification popup function
local function notify(text, duration)
    duration = duration or 3
    local notif = Instance.new("TextLabel", gui)
    notif.Size = UDim2.new(0, 300, 0, 40)
    notif.Position = UDim2.new(0.5, -150, 0, 10)
    notif.BackgroundColor3 = Color3.fromRGB(180, 40, 40)
    notif.TextColor3 = Color3.new(1,1,1)
    notif.Font = Enum.Font.GothamBold
    notif.TextSize = 18
    notif.Text = text
    notif.TextWrapped = true
    notif.TextXAlignment = Enum.TextXAlignment.Center
    notif.TextYAlignment = Enum.TextYAlignment.Center
    notif.ZIndex = 10
    Instance.new("UICorner", notif)
    task.delay(duration, function()
        notif:Destroy()
    end)
end

-- Buttons
makeButton("üìã Copy JobId", Color3.fromRGB(0, 170, 255), function()
	if setclipboard then setclipboard(CURRENT_JOBID) end
end)

makeButton("üîÅ Rejoin Server", Color3.fromRGB(0, 200, 100), function()
	TeleportService:TeleportToPlaceInstance(PLACE_ID, CURRENT_JOBID, LocalPlayer)
end)

makeButton("üöÄ Server Hop", Color3.fromRGB(255, 170, 0), function()
	if not canServerHop then
		-- Executor too limited, notify user with a popup or similar
		executorWarning.Visible = true
		return
	end

	local success, err = pcall(function()
		local cursor = ""
		while true do
			local url = ("https://games.roblox.com/v1/games/%d/servers/Public?limit=100&sortOrder=Desc&cursor=%s"):format(PLACE_ID, cursor)
			local result = HttpService:JSONDecode(game:HttpGet(url))
			local found = false
			for _, server in ipairs(result.data) do
				if server.id ~= CURRENT_JOBID and server.playing < server.maxPlayers then
					TeleportService:TeleportToPlaceInstance(PLACE_ID, server.id, LocalPlayer)
					found = true
					break
				end
			end
			if found then
				break
			end
			cursor = result.nextPageCursor or ""
			if cursor == "" or not cursor then break end
		end
	end)

	if not success then
		notify("üö´ Server hop failed: "..tostring(err))
	end
end)

-- Adjust joinBox, joinBtn, scroll positions based on buttons
local totalButtonRows = math.ceil(buttonCount / 2)
local baseY = nextY + totalButtonRows * 40

-- Join JobId Input
local joinBox = Instance.new("TextBox", main)
joinBox.Size = UDim2.new(1, -30, 0, 30)
joinBox.Position = UDim2.new(0, 15, 0, baseY + 5)
joinBox.PlaceholderText = "Paste JobId to Join"
joinBox.Text = ""
joinBox.TextColor3 = Color3.new(1, 1, 1)
joinBox.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
joinBox.Font = Enum.Font.Code
joinBox.TextSize = 16
joinBox.ClearTextOnFocus = false
Instance.new("UICorner", joinBox)

local joinBtn = Instance.new("TextButton", main)
joinBtn.Size = UDim2.new(1, -30, 0, 30)
joinBtn.Position = UDim2.new(0, 15, 0, baseY + 40)
joinBtn.Text = "üîó Join JobId"
joinBtn.BackgroundColor3 = Color3.fromRGB(120, 90, 255)
joinBtn.TextColor3 = Color3.new(1, 1, 1)
joinBtn.Font = Enum.Font.GothamSemibold
joinBtn.TextSize = 16
Instance.new("UICorner", joinBtn)

joinBtn.MouseButton1Click:Connect(function()
	local jid = joinBox.Text
	if jid and jid ~= "" then
		TeleportService:TeleportToPlaceInstance(PLACE_ID, jid, LocalPlayer)
	end
end)

-- Server list frame
local scroll = Instance.new("ScrollingFrame", main)
scroll.Size = UDim2.new(1, -20, 0, 80) -- smaller height
scroll.Position = UDim2.new(0, 10, 0, baseY + 75)
scroll.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
scroll.ScrollBarThickness = 6
Instance.new("UICorner", scroll)

local layout = Instance.new("UIListLayout", scroll)
layout.Padding = UDim.new(0, 6)

-- Add server entries
local function addServer(jobId, ping, players)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, 0, 0, 28)
	btn.BackgroundColor3 = Color3.fromRGB(65, 65, 75)
	btn.Text = string.format("üåê %s  |  üßç %d  |  üì∂ %s", jobId:sub(1, 8) .. "...", players or 0, ping or "?")
	btn.TextColor3 = Color3.new(1,1,1)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.Parent = scroll
	Instance.new("UICorner", btn)
	btn.MouseButton1Click:Connect(function()
		TeleportService:TeleportToPlaceInstance(PLACE_ID, jobId, LocalPlayer)
	end)
end

-- Fetch live public servers
local function fetchServers()
	local cursor = ""
	local attempts = 0
	repeat
		local url = ("https://games.roblox.com/v1/games/%d/servers/Public?limit=100&sortOrder=Desc&cursor=%s"):format(PLACE_ID, cursor)
		local success, data = pcall(function()
			return HttpService:JSONDecode(game:HttpGet(url))
		end)
		if success and data and data.data then
			for _, s in ipairs(data.data) do
				if s.id ~= CURRENT_JOBID then
					addServer(s.id, s.ping, s.playing)
				end
			end
			cursor = data.nextPageCursor or ""
		else
			break
		end
		attempts += 1
		wait(0.5)
	until cursor == nil or cursor == "" or attempts >= 3
end

task.spawn(fetchServers)

-- Minimize button inside main frame
local minimizeBtn = Instance.new("TextButton", main)
minimizeBtn.Size = UDim2.new(0, 30, 0, 30)
minimizeBtn.Position = UDim2.new(1, -35, 0, 5) -- right side, inside frame
minimizeBtn.Text = "‚Äî"
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 22
minimizeBtn.TextColor3 = Color3.new(1, 1, 1)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 75)
Instance.new("UICorner", minimizeBtn)

-- Minimized small button at bottom left corner (hidden at start)
local minimizedBtn = Instance.new("TextButton", gui)
minimizedBtn.Size = UDim2.new(0, 140, 0, 32)
minimizedBtn.Position = UDim2.new(0, 10, 1, -42) -- bottom left with margin
minimizedBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
minimizedBtn.Text = "üåê Server Tool"
minimizedBtn.Font = Enum.Font.GothamBold
minimizedBtn.TextSize = 18
minimizedBtn.TextColor3 = Color3.new(1, 1, 1)
minimizedBtn.Visible = false
Instance.new("UICorner", minimizedBtn)

minimizeBtn.MouseButton1Click:Connect(function()
	main.Visible = false
	minimizedBtn.Visible = true
end)

minimizedBtn.MouseButton1Click:Connect(function()
	main.Visible = true
	minimizedBtn.Visible = false
end)

local url = "https://raw.githubusercontent.com/Cxltures/Public/main/Server%20Utility%20(GUI)"

if queue_on_teleport then
    queue_on_teleport("loadstring(game:HttpGet('" .. url .. "'))()")
end
